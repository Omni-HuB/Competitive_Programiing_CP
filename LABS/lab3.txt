the codeforce problem is  : 

Given a tree with N vertices and N−1, you need to determine if the given tree is a star.

A star is a tree that contains only one interior (non-leaf) node, connected to all other (leaf) nodes.

Input
The first line contains a single integer N(3≤N≤105), the number of nodes in the tree.N−1 lines follow. Each line contains 2 integers u and v (1≤u,v≤N),
denoting that node u is connected to node v.It is guaranteed that the input forms a tree.

Output
Print YES if the input tree is a star, and print NO otherwise.

example  inputs are : 
case 1:
5
1 4
2 4
3 4
4 5

case 2:
4
2 4
1 4
2 3


the outputs are : 
case 1:
YES
case 2:
NO


the hints are  : 
Note:
In the first test, Node 4 is an interior node, and all other nodes are leaf nodes.

In the second test, both nodes 2 and 4are interior nodes.


can you help me solve this codeforce problem?





D:

the codeforce problem is  : 

Vatik lives in Delhi and travels by metro most of the time. Delhi metro map is very complex and there exist
multiple ways of travelling from one place to another. She has sit for internships soon and wants to save as much time as possible.There are n metro stations in Delhi numbered 1, 2, .. n. Vatik knows which stations have a direct connection between them and how much time it takes to travel from them.

She needs your help to find out what will the minimum travel time for q such pairs of stations x and y and
wants to know what the minimum time to travel from x to y will be and output "-1" if there is no way to travel between the given stations.


Input:
The first line contains three integers n, m and q (2≤n≤500,0≤m≤min((n∗(n−1)/2,1000),1≤q≤10^5) where n is the number of stations,
m are the number of connected stations and q is the number of queries.
Next mlines contain three integers ni, nj(1≤ni,nj≤n,ni≠nj) and w(1≤w≤10^5) where ni and nj are station numbers that are connected and w is the travel time between them.
Next q lines contain 2 integers xi, xj between which you have to find the minimum travel time.

Output:
On the ith line, print the answer of ith query.

example  inputs are : 
case 1:
6 5 2
1 5 3
5 4 2
1 3 8
3 4 6
2 6 8
1 4
2 3


the outputs are : 
case 1:
5
-1

hints : 
1.Since queries is of the magnitude 10^5, it is better to precompute the shortest distances.
2.Since magnitude of efficient algorithms is also around 10^8, slower languages might not pass the time constraints.

can you help me solve this codeforce problem?








the codeforce problem is  :
Boe Jiden is on a mission to extract oil from the middle east. There are n locations in the middle east where oil exists. The locations are numbered 1, 2,...n. His journey starts at location number 1 and should end at location number n.
These locations have one way paths between them. It is guaranteed that there does not exist a path that leads to a already visited location. Jiden wants to know what is the maximum number of locations he can visit starting from 1 and ending at n

Input
The first line contains the two integers n and m (2≤n≤105,1≤m≤2∗105), where n is the number of places where oil exists and m are the number of paths between two any places.

Next m lines contain two integers xi and yi, which means there is a path from xi to yi.

Output
In the first line print the maximum number of places he can visit on his route. If there is no path, print "IMPOSSIBLE".


example  inputs are : 
case 1:
4 4
3 1
3 4
1 2
2 4

case 2:
10 10
2 6
1 2
4 6
5 6
2 5
7 8
6 10
1 10
3 5
4 9


the outputs are : 
case 1:
3

case 2:
5


can you help me solve this codeforce problem? time limit for the code should not exceed 1 sec.









the codeforce problem is  :
After attending a lecture on trees, a student named Jamun became inspired and devised a unique tree structure called a k-tree.

A k-tree is an endless tree with a central root where the following conditions apply:

Every vertex within the tree has precisely k children.

Each edge in the tree possesses a distinct weight.

When examining the edges extending from a particular vertex to its children (exactly k edges), their weights follow a sequential pattern of 1, 2, 3, ..., k.

Upon learning about the k-tree concept, Altaf, a close friend of Jamun, became intrigued and raised an intriguing question: "In a k-tree, originating from the root and including at least one edge with a weight of d or higher, how many paths exist with a total weight of n (sum of edge weights)?"

Help Altaf find an answer to his question. As the number of ways can be rather large, print it modulo 1000000007.

Input
A single line contains three space-separated integers: n, k and d (1≤n,k≤100;1≤d≤k).

Output
Print a single integer — the answer to the problem modulo 1000000007 .

example  inputs are : 
case 1:
4 3 2


the outputs are : 
case 1:
6

can you help me solve this codeforce problem? time limit for the code should not exceed 1 sec.










C

the codeforce problem is: the tree game  :

jamun has recently made a remarkable discovery in the field of trees, introducing a new type called the evolved tree. Inspired by this revolutionary finding, Jamun devised a game for children that utilizes evolved trees.

The game is played on a tree consisting of n nodes, numbered from 1 to n. Each node i initially holds a value, denoted as initi, which can be either 0 or 1. The root of the tree is designated as node 1.

During the game, players can perform various operations on the tree. The only available operation involves selecting a node x. Once a node x is chosen, its value flips (from 0 to 1 or vice versa), while the values of its immediate children remain unchanged. Similarly, the values of grandchildren of x flip, and the values of great-grandchildren remain the same, continuing this pattern.

The objective of the game is to achieve a specific value, goali, for each node i, where goali can be either 0 or 1. The goal is to accomplish this objective using the minimum possible operations.


Input:
The first line contains an integer n (1≤n≤10^5). Each of the next n-1 lines contains two integers ui and vi (1≤ui,vi≤n;ui≠vi)
 meaning there is an edge between nodes ui and vi.

The next line contains n integer numbers, and the ith of them corresponds to initi (initi is either 0 or 1). The following line also contains n integer numbers, the ith number corresponds to goali (goali is either 0 or 1).

Output:
In the first line output an integer number count, representing the minimal number of operations you perform. Each of the next count lines should contain an integer xi, representing that you pick a node xi, sorted in increasing order of value of node.



examples inputs are : 
case 1:
10
2 1
3 1
4 2
5 1
6 2
7 5
8 6
9 8
10 5
1 0 1 1 0 1 0 1 0 1
1 0 1 0 0 1 1 1 0 1


the outputs are : 
case 1:
2
4
7


hints : 

1.Store the state for the nodes, i.e., whether they are in flipped state or its original state.
2.Storing for all of the nodes at every step would be too slow, can you think of an efficient way?


can you help me solve this codeforce problem? time limit for the code should not exceed 1 sec.





it os still  showing output  :
6
4
2
1
7
5
1
answer fot the test case 1 is :
2
4
7


there are clearly 3 outputs for test case 1 but you are showing so many



which is clearly wrong. kindly take help from hints to solve problem properly.
